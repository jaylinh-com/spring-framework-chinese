(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{407:function(e,t,o){"use strict";o.r(t);var r=o(43),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"core-technologies"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#core-technologies"}},[e._v("#")]),e._v(" Core Technologies")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("Version 5.2.12.RELEASE")])]),e._v(" "),o("p",[e._v("This part of the reference documentation covers all the technologies that are absolutely integral to the Spring Framework.")]),e._v(" "),o("p",[e._v("Foremost amongst these is the Spring Framework’s Inversion of Control (IoC) container. A thorough treatment of the Spring Framework’s IoC container is closely followed by comprehensive coverage of Spring’s Aspect-Oriented Programming (AOP) technologies. The Spring Framework has its own AOP framework, which is conceptually easy to understand and which successfully addresses the 80% sweet spot of AOP requirements in Java enterprise programming.")]),e._v(" "),o("p",[e._v("Coverage of Spring’s integration with AspectJ (currently the richest — in terms of features — and certainly most mature AOP implementation in the Java enterprise space) is also provided.")]),e._v(" "),o("h1",{attrs:{id:"_1-the-ioc-container"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-the-ioc-container"}},[e._v("#")]),e._v(" 1. The IoC Container")]),e._v(" "),o("p",[e._v("This chapter covers Spring’s Inversion of Control (IoC) container.")])])}),[],!1,null,null,null);t.default=s.exports}}]);